<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 读取properties的数据库连接配置 ignore-unresolvable忽略找不到的属性，不忽略会抛出异常 -->
    <context:property-placeholder location="classpath:properties/jdbc.properties" ignore-unresolvable="true"/>

    <!-- 配置数据源druid连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <!-- 加载的驱动完整类名 -->
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <!-- 数据库url -->
        <property name="url" value="${jdbc.url}"/>
        <!-- 用户名 -->
        <property name="username" value="${jdbc.username}"/>
        <!-- 密码 -->
        <property name="password" value="${jdbc.password}"/>

        <!-- 配置初始化连接池大小，最大，最小 -->
        <property name="initialSize" value="${druid.pool.size.init}"/>
        <property name="maxActive" value="${druid.pool.size.max}"/>
        <property name="minIdle" value="${druid.pool.size.min}"/>

        <!-- 配置监控统计拦截的filters，wall用于防止sql注入，stat用于统计分析 -->
        <property name="filters" value="wall,stat"/>
    </bean>


    <!-- 配置MyBatis的sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 扫描entity包，使用别名，多个用;隔开 -->
        <property name="typeAliasesPackage" value="org.pino.entity"/>
        <!-- MyBatis全局配置文件位置 -->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <!-- Mapper的xml文件的位置 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 配置扫描dao接口包，动态实现dao接口，注入到spring容器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 配置sqlSessionFactory的name -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 配置需要扫描的dao接口包 -->
        <property name="basePackage" value="org.pino.dao"/>
    </bean>

</beans>